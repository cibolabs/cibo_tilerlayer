# This file is part of Cibo Tiler.
# Copyright (C) 2024 Cibolabs.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cibo_tilerlayer

  SAM Template for cibo_tilerlayer

Parameters:
  Environment:
    Type: String
    Default: notset
    Description: (Required) Enter dev, prod.
  Architecture:
    Type: String
    Default: arm64
    Description: Architecture we are building for
    AllowedValues:
      - arm64
      - x86_64
  PowerToolsLayerVersion:
    Type: Number
    Default: 4
  Runtime: 
    Type: String
    Default: python3.12

Globals: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-template-anatomy-globals.html
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: !Ref Runtime

Resources:
  CiboTilerLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/cibo
      CompatibleArchitectures:
        - !Ref Architecture
      CompatibleRuntimes:
        - python3.12
      LicenseInfo: GPL-3.0-or-later
      LayerName: !Sub 
        - 'CiboTilerLayer-${RuntimeNoDot}-${Architecture}-${Environment}'
        - RuntimeNoDot: !Join ['', !Split ['.', !Ref Runtime] ] 
    Metadata:
      BuildMethod: makefile
      BuildArchitecture: !Ref Architecture

  # Otherwise binary png is returned as base64
  TestAPI:
    Type: AWS::Serverless::Api
    DependsOn: TestFunction
    Properties:
      StageName: !Ref Environment
      BinaryMediaTypes:
        - 'image~1png'

  TestFunction:
    Type: AWS::Serverless::Function
    DependsOn: CiboTilerLayer
    Connectors:
      BucketCon:
        Properties:
          Destination:
            Type: AWS::S3::Bucket
            Arn: 'arn:aws:s3:::sentinel-cogs'
          Permissions:
            - Read
    Properties:
      FunctionName: !Sub 'TestCiboTiler${Environment}'
      Handler: app.lambda_handler
      CodeUri: tilertest
      Description: Tester for CiboTilerLayer
      Architectures:
        - !Ref Architecture
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: POST
            RestApiId: !Ref TestAPI
      Layers:
        - !Ref CiboTilerLayer
        - !Sub
          - 'arn:aws:lambda:${AWS::Region}:017000801446:layer:AWSLambdaPowertoolsPythonV3-${RuntimeNoDot}-arm64:${PowerToolsLayerVersion}'
          - RuntimeNoDot: !Join ['', !Split ['.', !Ref Runtime] ]
         
      Environment:
        Variables:
          POWERTOOLS_SERVICE_NAME: PowertoolsOziusAPI
          POWERTOOLS_METRICS_NAMESPACE: API
          POWERTOOLS_LOG_LEVEL: INFO
          LD_LIBRARY_PATH: "/opt/python/lib:/var/lang/lib:/lib64:/usr/lib64:/var/runtime:/var/runtime/lib:/var/task:/opt/lib"
          GDAL_DATA: "/opt/python/share/gdal"
          PROJ_LIB: "/opt/python/share/proj"
          GDAL_CACHEMAX: "75%"
          VSI_CACHE: "TRUE"
          VSI_CACHE_SIZE: "536870912"
          GDAL_DISABLE_READDIR_ON_OPEN: "TRUE"
          CPL_VSIL_CURL_ALLOWED_EXTENSIONS: ".tif,.tif.aux.xml,.vrt"
          GDAL_MAX_DATASET_POOL_SIZE: "512"
          CPL_TMPDIR: "/tmp"
          GDAL_FORCE_CACHING: "YES"
          GDAL_HTTP_MAX_RETRY: "10"
          GDAL_HTTP_RETRY_DELAY: "1"

Outputs:
  LayerARN:
    Description: "Base Cibo Layer ARN"
    Value: !Ref CiboTilerLayer 
    Export:
      Name: !Sub "CiboTilerLayerARN-${Architecture}-${Environment}"
  ApiURL:
    Description: "API Gateway endpoint URL for Tiler Test"
    Value: !Sub "https://${TestAPI}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"
    # Note: don't export

